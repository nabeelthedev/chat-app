Parameters: {}
Resources:
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      RoleName:
        Fn::Sub: '${AWS::StackName}-${AWS::Region}-ServiceRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                Resource:
                  - Fn::GetAtt:
                      - UsersDB
                      - Arn
                  - Fn::GetAtt:
                      - ReferenceLinksDB
                      - Arn
                  - Fn::GetAtt:
                      - RelationshipsDB
                      - Arn
                  - Fn::GetAtt:
                      - GroupsDB
                      - Arn
                  - Fn::GetAtt:
                      - GroupLinksDB
                      - Arn
                  - Fn::GetAtt:
                      - MessagesDB
                      - Arn
                  - Fn::Join:
                    - ""
                    - - Fn::GetAtt:
                        - MessagesDB
                        - Arn
                      - /*/*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: '*'
    DependsOn:
      - UsersDB
      - ReferenceLinksDB
      - GroupsDB
      - GroupLinksDB
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      Name:
        Ref: AWS::StackName
      UserPoolConfig:
        UserPoolId:
          Fn::ImportValue:
            Fn::Sub: auth-test3-UserPoolId
        AwsRegion:
          Ref: AWS::Region
        DefaultAction: ALLOW
  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DefinitionS3Location: './graphql/schema.graphql'
    DependsOn: GraphQLApi
  UsersDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: UsersDB
      Name: UsersDB
      ServiceRoleArn:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Type: AMAZON_DYNAMODB
    DependsOn:
      - GraphQLApi
      - ServiceRole
      - UsersDB
  ReferenceLinksDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: ReferenceLinksDB
      Name: ReferenceLinksDB
      ServiceRoleArn:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Type: AMAZON_DYNAMODB
    DependsOn:
      - GraphQLApi
      - ServiceRole
      - ReferenceLinksDB
  RelationshipsDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: RelationshipsDB
      Name: RelationshipsDB
      ServiceRoleArn:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Type: AMAZON_DYNAMODB
    DependsOn:
      - GraphQLApi
      - ServiceRole
      - RelationshipsDB
  GroupsDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: GroupsDB
      Name: GroupsDB
      ServiceRoleArn:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Type: AMAZON_DYNAMODB
    DependsOn:
      - GraphQLApi
      - ServiceRole
      - GroupsDB
  GroupLinksDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: GroupLinksDB
      Name: GroupLinksDB
      ServiceRoleArn:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Type: AMAZON_DYNAMODB
    DependsOn:
      - GraphQLApi
      - ServiceRole
      - GroupLinksDB
  MessagesDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: MessagesDB
      Name: MessagesDB
      ServiceRoleArn:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Type: AMAZON_DYNAMODB
    DependsOn:
      - GraphQLApi
      - ServiceRole
      - MessagesDB
  CreateReferenceLinkLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: './functions/CreateReferenceLink'
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          ReferenceLinksTableName:
            Ref: ReferenceLinksDB
    DependsOn:
      - ServiceRole
      - ReferenceLinksDB
  CreateReferenceLinkLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - CreateReferenceLinkLambda
            - Arn
      Name: CreateReferenceLinkLambda
      ServiceRoleArn:
        Fn::GetAtt:
          - ServiceRole
          - Arn
      Type: AWS_LAMBDA
    DependsOn:
      - GraphQLApi
      - ServiceRole
      - CreateReferenceLinkLambda
  AppsyncFunctionGetUser:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - UsersDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: GetUser
      RequestMappingTemplateS3Location: './graphql/functions/GetUser/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/GetUser/response.vm'
    DependsOn:
      - GraphQLApi
      - UsersDBDataSource
  AppsyncFunctionPutUser:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - UsersDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: PutUser
      RequestMappingTemplateS3Location: './graphql/functions/PutUser/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/PutUser/response.vm'
    DependsOn:
      - GraphQLApi
      - UsersDBDataSource
  AppsyncFunctionCreateReferenceLink:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - CreateReferenceLinkLambdaDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: CreateReferenceLink
      RequestMappingTemplateS3Location: './graphql/functions/CreateReferenceLink/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/CreateReferenceLink/response.vm'
    DependsOn:
      - GraphQLApi
      - CreateReferenceLinkLambdaDataSource
  AppsyncFunctionGetReferenceLink:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - ReferenceLinksDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: GetReferenceLink
      RequestMappingTemplateS3Location: './graphql/functions/GetReferenceLink/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/GetReferenceLink/response.vm'
    DependsOn:
      - GraphQLApi
      - ReferenceLinksDBDataSource
  AppsyncFunctionPutFriend:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - RelationshipsDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: PutFriend
      RequestMappingTemplateS3Location: './graphql/functions/PutFriend/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/PutFriend/response.vm'
    DependsOn:
      - GraphQLApi
      - RelationshipsDBDataSource
  AppsyncFunctionGetRelationship:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - RelationshipsDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: GetRelationship
      RequestMappingTemplateS3Location: './graphql/functions/GetRelationship/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/GetRelationship/response.vm'
    DependsOn:
      - GraphQLApi
      - RelationshipsDBDataSource
  AppsyncFunctionPutGroup:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - GroupsDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: PutGroup
      RequestMappingTemplateS3Location: './graphql/functions/PutGroup/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/PutGroup/response.vm'
    DependsOn:
      - GraphQLApi
      - GroupsDBDataSource
  AppsyncFunctionPutGroupLink:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - GroupLinksDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: PutGroupLink
      RequestMappingTemplateS3Location: './graphql/functions/PutGroupLink/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/PutGroupLink/response.vm'
    DependsOn:
      - GraphQLApi
      - GroupLinksDBDataSource
  AppsyncFunctionGetGroupLink:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - GroupLinksDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: GetGroupLink
      RequestMappingTemplateS3Location: './graphql/functions/GetGroupLink/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/GetGroupLink/response.vm'
    DependsOn:
      - GraphQLApi
      - GroupLinksDBDataSource
  AppsyncFunctionPutMessage:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - MessagesDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: PutMessage
      RequestMappingTemplateS3Location: './graphql/functions/PutMessage/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/PutMessage/response.vm'
    DependsOn:
      - GraphQLApi
      - MessagesDBDataSource
  AppsyncFunctionGetGroup:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      DataSourceName:
        Fn::GetAtt:
          - GroupsDBDataSource
          - Name
      FunctionVersion: '2018-05-29'
      Name: GetGroup
      RequestMappingTemplateS3Location: './graphql/functions/GetGroup/request.vm'
      ResponseMappingTemplateS3Location: './graphql/functions/GetGroup/response.vm'
    DependsOn:
      - GraphQLApi
      - GroupsDBDataSource
  AppsyncResolverGetUser:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: getUser
      Kind: PIPELINE
      PipelineConfig:
          Functions:
            - Fn::GetAtt: 
              - AppsyncFunctionGetUser 
              - FunctionId
            - Fn::GetAtt: 
              - AppsyncFunctionPutUser
              - FunctionId
      RequestMappingTemplateS3Location: './graphql/resolvers/GetUser/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/GetUser/response.vm'
      TypeName: Query
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - AppsyncFunctionGetUser
      - AppsyncFunctionPutUser
  AppsyncResolverCreateReferenceLink:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: createReferenceLink
      Kind: PIPELINE
      PipelineConfig:
          Functions:
            - Fn::GetAtt: 
              - AppsyncFunctionCreateReferenceLink
              - FunctionId
      RequestMappingTemplateS3Location: './graphql/resolvers/CreateReferenceLink/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/CreateReferenceLink/response.vm'
      TypeName: Mutation
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - AppsyncFunctionCreateReferenceLink
  AppsyncResolverAddFriend:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: addFriend
      Kind: PIPELINE
      PipelineConfig:
          Functions:
            - Fn::GetAtt: 
              - AppsyncFunctionGetReferenceLink
              - FunctionId
            - Fn::GetAtt: 
              - AppsyncFunctionGetRelationship
              - FunctionId
            - Fn::GetAtt: 
              - AppsyncFunctionPutFriend
              - FunctionId
            - Fn::GetAtt: 
              - AppsyncFunctionPutFriend
              - FunctionId
      RequestMappingTemplateS3Location: './graphql/resolvers/AddFriend/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/AddFriend/response.vm'
      TypeName: Mutation
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - AppsyncFunctionGetReferenceLink
      - AppsyncFunctionPutFriend
      - AppsyncFunctionGetRelationship
  AppsyncResolverCreateGroup:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: createGroup
      TypeName: Mutation
      Kind: PIPELINE
      RequestMappingTemplateS3Location: './graphql/resolvers/CreateGroup/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/CreateGroup/response.vm'
      PipelineConfig:
          Functions:
            - Fn::GetAtt: 
              - AppsyncFunctionPutGroup
              - FunctionId
            - Fn::GetAtt: 
              - AppsyncFunctionPutGroupLink
              - FunctionId
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - AppsyncFunctionPutGroup
      - AppsyncFunctionPutGroupLink
  AppsyncResolverListGroups:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: listGroups
      TypeName: Query
      Kind: UNIT
      RequestMappingTemplateS3Location: './graphql/resolvers/ListGroups/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/ListGroups/response.vm'
      DataSourceName: 
        Fn::GetAtt:
          - GroupLinksDBDataSource
          - Name
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - GroupLinksDBDataSource
  AppsyncResolverListGroupsGetGroup:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: items
      TypeName: ListGroupsResponse
      Kind: UNIT
      RequestMappingTemplate: 
        Fn::Join: 
          - ""
          - - Fn::Sub:
              - '#if($ctx.source.items == [])
              #return($ctx.source.items)
              #end
              {
                "version" : "2018-05-29",
                "operation" : "BatchGetItem",
                "tables" : {
                  "${TableName}": {'
              - TableName: 
                  Ref: GroupsDB 
            - '"keys": [
              #foreach($i in $ctx.source.items)
              {
                "id": {"S": "${i.groupId}"}
              },
              #end
              ],
              "consistentRead": true
              }
              }
              }'
        
      ResponseMappingTemplate: 
        Fn::Sub:
          - '#if($ctx.error)
          $util.error($ctx.error.message, $ctx.error.type)
          #end
          $util.toJson($ctx.result.data.${TableName})'
          - TableName: 
              Ref: GroupsDB 
      # RequestMappingTemplateS3Location: './graphql/resolvers/ListGroupsGetGroup/request.vm'
      # ResponseMappingTemplateS3Location: './graphql/resolvers/ListGroupsGetGroup/response.vm'
      DataSourceName: 
        Fn::GetAtt:
          - GroupsDBDataSource
          - Name
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - GroupsDBDataSource
  AppsyncResolverListMessages:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: listMessages
      TypeName: Query
      Kind: UNIT
      RequestMappingTemplateS3Location: './graphql/resolvers/ListMessages/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/ListMessages/response.vm'
      DataSourceName: 
        Fn::GetAtt:
          - MessagesDBDataSource
          - Name
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - MessagesDBDataSource
  AppsyncResolverPostMessage:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: postMessage
      TypeName: Mutation
      Kind: PIPELINE
      PipelineConfig:
        Functions:
          - Fn::GetAtt: 
            - AppsyncFunctionGetGroupLink
            - FunctionId
          - Fn::GetAtt: 
            - AppsyncFunctionGetUser
            - FunctionId
          - Fn::GetAtt: 
            - AppsyncFunctionPutMessage
            - FunctionId
      RequestMappingTemplateS3Location: './graphql/resolvers/PostMessage/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/PostMessage/response.vm'
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - MessagesDBDataSource
      - AppsyncFunctionPutMessage
      - AppsyncFunctionGetGroupLink
      - AppsyncFunctionGetUser
  AppsyncResolverUpdateDisplayName:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: updateDisplayName
      TypeName: Mutation
      Kind: UNIT
      RequestMappingTemplateS3Location: './graphql/resolvers/UpdateDisplayName/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/UpdateDisplayName/response.vm'
      DataSourceName: 
        Fn::GetAtt:
          - UsersDBDataSource
          - Name
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - UsersDBDataSource
  AppsyncResolverJoinGroup:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - GraphQLApi
          - ApiId
      FieldName: joinGroup
      TypeName: Mutation
      Kind: PIPELINE
      RequestMappingTemplateS3Location: './graphql/resolvers/JoinGroup/request.vm'
      ResponseMappingTemplateS3Location: './graphql/resolvers/JoinGroup/response.vm'
      PipelineConfig:
        Functions:
          - Fn::GetAtt: 
            - AppsyncFunctionGetReferenceLink
            - FunctionId
          - Fn::GetAtt: 
            - AppsyncFunctionGetGroup
            - FunctionId
          - Fn::GetAtt: 
            - AppsyncFunctionPutGroupLink
            - FunctionId
    DependsOn:
      - GraphQLApi
      - GraphQLSchema
      - AppsyncFunctionGetReferenceLink
      - AppsyncFunctionPutGroupLink
      - AppsyncFunctionGetGroup
  UsersDB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
  ReferenceLinksDB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      TimeToLiveSpecification:
        AttributeName: ExpirationTime
        Enabled: true
  RelationshipsDB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: theirId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: theirId
          AttributeType: S
  GroupsDB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
  GroupLinksDB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: groupId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: groupId
          AttributeType: S
  MessagesDB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: groupId
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: groupId
          AttributeType: S
        - AttributeName: id
          AttributeType: S
        - AttributeName: CreateTime
          AttributeType: N
      GlobalSecondaryIndexes:
        - IndexName: MessagesGroupCreateTime
          KeySchema: 
            - AttributeName: groupId
              KeyType: HASH
            - AttributeName: CreateTime
              KeyType: RANGE
          Projection: 
            ProjectionType: ALL

